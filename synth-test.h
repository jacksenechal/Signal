// generated by Fast Light User Interface Designer (fluid) version 1.0110

#ifndef synth_test_h
#define synth_test_h
#include <stdio.h>
#include <iostream>
#include <pthread.h>
#include <math.h>
#include <portaudio.h>
#include "portmidi.h"
#include "pmutil.h"
#include "porttime.h"
#include <FL/Fl.H>
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Light_Button.H>

class PortAudioTest {
    public:
        PortAudioTest();
        ~PortAudioTest();
        void start();
        void stop();
        void* saw();

    private:
        /* user data for the PortAudio engine callback */
        typedef struct
        {
            float left_phase;
            float right_phase;
        } paTestData;
        paTestData data;

        /* saw button thread variables */
        pthread_mutex_t sawButtonMutex;
        pthread_cond_t sawButtonOffCondition;

        static int paSawCallback( const void*, void*, unsigned long,
                const PaStreamCallbackTimeInfo*, PaStreamCallbackFlags,
                void* );
};

class PortMidiTest {
    public:
        bool start();
        void stop();
    private:
        PmStream* midi_in;
        PmStream* midi_out;
        void cancelStart();
};

class UserInterface {
    public:
        Fl_Double_Window* make_window();
        Fl_Light_Button* sawWaveButton;
        Fl_Light_Button* midiThruButton;
        Fl_Light_Button* midiSynthButton;
    private:
        PortAudioTest patest;
        PortMidiTest pmtest;
        void cb_sawWaveButton_i(Fl_Light_Button*, void*);
        static void cb_sawWaveButton(Fl_Light_Button*, void*);
        void cb_midiThruButton_i(Fl_Light_Button*, void*);
        static void cb_midiThruButton(Fl_Light_Button*, void*);
        void cb_midiSynthButton_i(Fl_Light_Button*, void*);
        static void cb_midiSynthButton(Fl_Light_Button*, void*);
};

#endif
