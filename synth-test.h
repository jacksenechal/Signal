// generated by Fast Light User Interface Designer (fluid) version 1.0110

#ifndef synth_test_h
#define synth_test_h
#include <stdio.h>
#include <iostream>
#include <pthread.h>
#include <math.h>
#include <portaudio.h>
#include "portmidi.h"
#include "pmutil.h"
#include "porttime.h"
#include <FL/Fl.H>
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Light_Button.H>

class PortMidiTest {
    public:
        PmQueue* midiToSynthQueue;
        bool noteOn;
        int frequency;
        PortMidiTest();
        ~PortMidiTest();
        void processMidi();
        void setMidiThru(bool);
        void setMidiToSynth(bool);
    private:
        int active;
        bool midiThru;
        bool midiToSynth;
        PmStream* midiIn;
        PmStream* midiOut;
        bool start();
        void stop();
        void cancelStart();
};
void PortMidiTest_processMidi(PtTimestamp, void*);

class PortAudioTest {
    public:
        PortAudioTest();
        ~PortAudioTest();
        void start();
        void stop();
        void* saw();
        void setMonotoneSaw(bool);
        void setMidiSaw(bool);
        void setMidiSource(PortMidiTest*);
    private:
        int active;
        bool monotoneSaw;
        bool midiSaw;
        typedef struct
        {
            float leftPhase;
            float rightPhase;
            bool* noteOn;
            int* frequency;
        } paTestData;
        paTestData data;
        pthread_mutex_t sawButtonMutex;
        pthread_cond_t sawButtonOffCondition;
        static int paSawCallback( const void*, void*, unsigned long,
                const PaStreamCallbackTimeInfo*, PaStreamCallbackFlags,
                void* );
};
void* PortAudioTest_saw(void*);

class UserInterface {
    public:
        Fl_Light_Button* sawWaveButton;
        Fl_Light_Button* midiThruButton;
        Fl_Light_Button* midiSynthButton;
        UserInterface();
        Fl_Double_Window* makeWindow();
    private:
        PortAudioTest patest;
        PortMidiTest pmtest;
        void cb_sawWaveButton_i(Fl_Light_Button*, void*);
        static void cb_sawWaveButton(Fl_Light_Button*, void*);
        void cb_midiThruButton_i(Fl_Light_Button*, void*);
        static void cb_midiThruButton(Fl_Light_Button*, void*);
        void cb_midiSynthButton_i(Fl_Light_Button*, void*);
        static void cb_midiSynthButton(Fl_Light_Button*, void*);
};

#endif
